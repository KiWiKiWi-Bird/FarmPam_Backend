# workflow의 이름
name: Build FarmPam Backend

on:
  pull_request:
    branches: [ main ]

# 변수를 설정해서 사용 가능
env:
  # S3 생성 시 저장했던 이름
  BUCKET_NAME: farmpam-back-dara-e
  # CodeDeploy의 앱 이름
  CODE_DEPLOY_APP_NAME: FarmPam-CodeDeploy-App
  # CodeDeploy의 배포 그룹 이름
  DEPLOYMENT_GROUP_NAME: FarmPam-CodeDeploy-Group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION_OAUTH_YML }}" > ./src/main/resources/application-oauth.yml

      # Java JDK 설치
      - name: Setup Java JDK 17
        uses: actions/setup-java@v1
        with:
         java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # 빌드 진행
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      # 압축 파일 생성
      - name: Make Zip File
        run: zip -qq -r ./backend.zip .
        shell: bash

      # 권한 부여
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          audience: sts.amazonaws.com
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # S3로 업로드
      - name: Upload to S3
        run: aws s3 cp ./backend.zip s3://$BUCKET_NAME/

      # CodeDeploy
      - name: Code Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=backend.zip